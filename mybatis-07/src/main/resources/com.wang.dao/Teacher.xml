<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--configuration核心配置文件-->
<mapper namespace="com.wang.dao.TeacherMapper">
    <!---->
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--复杂属性需要单独处理 对象: association 集合: collection
            javaType="" 指定属性类型
            集合中的泛型信息使用ofType获取
        -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid"  column="tid"/>
        </collection>
    </resultMap>
    <!--按结果嵌套查询-->
    <select id="getTeacherInfo" resultMap="TeacherStudent">
        select s.id sid,s.name sname,t.id tid,t.name tname
        from teacher t,student s where s.tid=t.id and t.id=#{tid};
    </select>

    <!--========================================================-->
    <!--第一个sql 选老师-->
    <select id="getTeacherInfo2" resultMap="TeacherStudent2">
        select id,name from teacher where id =#{tid};
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <!--复杂属性需要单独处理 对象: association 集合: collection
            javaType="" 指定属性类型
            集合中的泛型信息使用ofType获取
        -->
        <!--这里id name 都可以省略,但是能写就写, 如果没写的话可能会映射错-->
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="students" ofType="Student" javaType="arraylist" select="getStudentByTeacherId" column="id"/>
    </resultMap>
    <!--第二个sql选学生,
    为啥第二个要选学生？
    因为老师的类里面学生时一个list
    -->

    <select id="getStudentByTeacherId" resultType="Student">
        select id,name,tid from student where tid=#{tid};
    </select>
</mapper>